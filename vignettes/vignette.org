#+TITLE:     annotSnpStats: a package for annotated SnpMatrix objects
#+AUTHOR:    Chris Wallace
#+EMAIL:     chris.wallace@cimr.cam.ac.uk
#+DATE:      2013-05-22 Wed
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:(not LOGBOOK) todo:t pri:nil tags:t

#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:
#+XSLT:

#+latex_header: \usepackage{fullpage}
#+latex: %\VignetteIndexEntry{annotated SnpMatrix objects}

* Introduction

=annotSnpStats= defines the =aSnpMatrix= class which extends the
=SnpMatrix= class from =snpStats= by aligning two dataframes containing
SNP (column) specific and sample (row) specific information.
Subsetting, binding etc can then be carried out keeping this
additional information aligned.

* Examples

The advantage of using =annotSnpStats= is perhaps best seen using some
example data from the =snpStats= package to define some new
=aSnpMatrix= objects and play with them.

** Create new objects
#+begin_src R :ravel 
library(snpStats)
library(annotSnpStats)
data(testdata, package="snpStats")
i1 <- 1:20
j1 <- 1:100

## initialize
rownames(Asnps) <- colnames(Autosomes)
rownames(Xsnps) <- colnames(Xchromosome)

as11 <- new("aSnpMatrix",
                 .Data=Autosomes[i1,j1],
                 snps=Asnps[j1,,drop=FALSE],
                 samples=subject.data[i1,])
as11
#+end_src

** Access annotation objects

#+begin_src R :ravel 
head(snps(as11))
head(samples(as11))
#+end_src

** Use in place of regular SnpMatrix objects

All =snpStats= S4 methods should work with =aSnpMatrix= objects

#+begin_src R :ravel 
summary(as11)
#+end_src

However, certain =snpStats= functions do not use the S4 interface, and
inheritance then gets a bit messed up.  In that case, you need to
explicity extract the =SnpMatrix= object

#+begin_src R :ravel 
ld(as(as11,"SnpMatrix"),depth=5,statistic="R.squared")
#+end_src


** Subsetting

Subsetting subsets both the =SnpMatrix= and the annotation objects

#+begin_src R :ravel 
asub <- as11[1:3,1:5]
dim(as11)
dim(asub)
nrow(snps(as11))
nrow(snps(asub))
nrow(samples(as11))
nrow(samples(asub))
#+end_src

** Binding
You can c/rbind =aSnpMatrix= objects using the S4 =cbind2= and
=rbind2= methods:

#+begin_src R :ravel 
i2 <- 21:40
j2 <- 101:200
as12 <- new("aSnpMatrix",
                 .Data=Autosomes[i1,j2],
                 snps=Asnps[j2,,drop=FALSE],
                 samples=subject.data[i1,])
as21 <- new("aSnpMatrix",
                 .Data=Autosomes[i2,j1],
                 snps=Asnps[j1,,drop=FALSE],
                 samples=subject.data[i2,])

cbind2(as11,as12)
rbind2(as11,as21)
#+end_src

* Other functions

A few other handy functions are included which should make joining
multiple aSnpMatrix objects easier. See the individual help
pages for more detail on these.

- =dups= finds indices of possible sample duplications between two
  aSnpStats objects
- =mismatch.count= quickly counts mismatched genotypes between pairs
  of individuals
- =sample.match= identifies indices of overlapping samples in two
  aSnpMatrix objects.  By default, match is on =rownames(x@samples)=,
  =rownames(y@samples)=.
- =snp.match= identifies indices of overlapping samples in two
  aSnpMatrix objects.  By default, match is on =rownames(x@snps)=,
  =rownames(y@snps)=.
- =snp.trim= drops SNPs from an annotSnpStats object according to SNP
  qc summary stats
- =align.alleles= automates using =snpStats::switch.alleles= to ensure
  numeric annotation of genotypes uses a consistent code between two
  different datasets, essential to join up data.
 
